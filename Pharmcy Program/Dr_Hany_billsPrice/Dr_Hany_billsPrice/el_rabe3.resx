<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxAPDRAPDw8QEBAPDw8PDxAVFBAPEA8PFhEYFhQVFBQY
        HCggGBolGxUWITIhJSkrLi4vFx8zODMsNygtLiv/2wBDAQoKCg4NDhYQEBosHB8cLCwsLCwsLCwsLCws
        LCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCz/wAARCAC+AQoDAREAAhEBAxEB/8QA
        HAABAAIDAQEBAAAAAAAAAAAAAAEHAwUGCAQC/8QASRAAAQMCAQMQBgcGBgMAAAAAAQACAwQRBQYHEhMX
        ITEyQVFTYXKBkZKhseEiNHF0srMUIyRSYnPBQmOCotHwJUNEVGTCFSYz/8QAGgEBAQEBAQEBAAAAAAAA
        AAAAAAECBQQDBv/EACwRAQACAQIFBAIBBQEBAAAAAAABAhEDEgQFFCExMlFhcSJBEzOBkcHwQjT/2gAM
        AwEAAhEDEQA/ALxQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQ
        EBAQEBAQEBAQEBAQEBAQEBAQEBBBKCA5DMJugXQRdBN0C6BdAugjSVMwm6gXQLoF0C6BdAugXQLoF0C6
        BdAugXQLoI0kDSRMwm6KjSVTMAcouYfpAQEBB+JnWaTwAnuRLeJUSM4WJccwfw3Uy4s8VbMv1rh4nxzO
        z5plnrNT5Qc4eJ8czs+aZOs1PlGuHifHM7PmmTrNT5TrhYnx7Oz5qnV3+f8AJrh4nxzOz5odZqfJrh4n
        xzOyh1l/k1w8T45nZ80Orv8AP+Ua4eJ8czsovV2/6U64eJ8czs+aHWX+TXDxPjmdnzROs1Pk1w8T45nZ
        80Os1Pk1w8T45nZ80Os1Pk1w8T45nZ80XrNT5NcPE+OZ2fNDrNT5NcPE+OZ2fNDrNT5NcPE+OZ2fNTJ1
        mp8o1w8T45nZ80ynWanya4eJ8czs+aZOs1PlOuHifHM7PmmTrNT5Rrh4nxzOz5pk6zU+U64eJ8czs+aZ
        Os1Pk1wsT45nZ81Tq7/P+TXDxPjmdnzUOs1PlGuHifHM7PmmTq7/ACkZw8T45nZVyvV2/wCk1w8T45nZ
        80ynWanyg5wsT45nZTK9Xb3djmzynq62qljqXtc1kOm2wsdLTAUe3hNabzMSshV7xAQEGKo3Dua7wRLe
        JeYVH5qe1pToqZZ3SnRTJuk0EybpNBMm6TQTJuk0EybpNFMm6UJlE6KZXdJoJk3SaCZN0mgmTdJoJk3S
        aCZN0mgmTdJoJk3SaCZN0mgmTdJoJk3SaCZN0mgmTdJopk3SaKZN0oITKZmRBOimV3ShMosHMx67Ue7j
        4wrDo8u9UrhVdgQEBBjqNw7mnwRm0Zh5hssvzVp/KZEN8iJukQ3SIbpEN0iG6RDcIyI1uEN0iG6RDdIh
        ukQ3SIbpEN0iG6RDdIhukQ3SIbpEXcITMwITPuInyIbpERYWZj12o93HzAkOny71WXAtOsICAgxz7h3N
        PgiS8wrL8xbzIjIgICAgICAgICAgICAgICAgICAgICNVjMuiyqydNDHQuduqinvJyTAguHU8dSsw9XE6
        W2tZc6FHkfTLRvZBHM7czOkazl0LaR9l3W6Efa9NtYfMj4CCwszHrlR7uPmBI8upy71W+lwLTrCAgIMc
        +4dzT4IkvMKy/MW8yIyICAgIoiCAgICAgICAiiIICAgICAg6DITCfpeJQxkXjYdWl4NBmyB0u0QrD2cH
        p77rKzrYfquGGQD0qeRko5p9F3cb9CS6XGacTpfSnMPonzzRwx7uV7WN9pO30bJ6FHH0q7rRDuM6lAym
        jw6CPcxQzMHLYsufadtJe3j6ba1iHAI5ggsLMx65Ue7j5gSPLqcu9VvpcC06wgICDHPuHc0+CJLzCsvz
        Nv2IwICKhzgDthGorPs/RRJ8oKIIiEUQEBAQEGakgdLIyNou6R7WN9rjYeKsPpWu6YiE1dOYpJInbqN7
        mH2tcQfBSU1K4tMMKMIQEBAQEFsZmaNgp6ifbe6UQnkY1gdbretQ6/L6xsmf27DK9oOGVodtfRZz0iMk
        d6PZr4/jtlW2Z/DBJVy1DhcQRhrL70j9/sg9akQ53AaebzaX156j9bRflz/ExSWuZT6P7q1RyxBYeZj1
        yo93HzAkeXT5d6rfS4Fp1hAQEGOfcO5p8ESXmHyWX5m3+xGBBLQSbAXJ2AOEo3WMyvLJrIumgomRzQtk
        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
</value>
  </data>
</root>